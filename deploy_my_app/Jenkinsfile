pipeline {
    agent any
    parameters {
        choice(name: 'SERVER', choices: ['server1'])
    }

    stages {
//         stage('Run command nginx') {
//             steps {
//             withCredentials([sshUserPrivateKey(credentialsId: 'NGINX_SSH_CRED', keyFileVariable: 'PRIVATE')]){
//                 sh 'ansible-playbook nginx/nginx_playbook.yml -i nginx/hosts.yml -e "host=${SERVER}" -t ${ACTION} --private-key $PRIVATE ${DETAILS}'
//                 }
//             }
//         }

        stage('Clone repo') {
            steps {
                dir('/tmp/myapp') {
                    checkout([$class: 'GitSCM',
                        branches: [[name: 'main']],
                        userRemoteConfigs: [[url: 'git@github.com:VorobyevAM/learn_python.git', credentialsId: 'github_cred']]
                    ])
                }
            }
        }

        stage('Copy app files') {
            steps {
             withCredentials([sshUserPrivateKey(credentialsId: 'SSH_CRED', keyFileVariable: 'PRIVATE')]){
                 sh 'ansible-playbook deploy_my_app/copy_files.yml -i deploy_my_app/hosts.yml -e "host=${SERVER}"'
                 }
            }
        }

        stage('Edit virtual env') {
            steps {
             withCredentials([sshUserPrivateKey(credentialsId: 'SSH_CRED', keyFileVariable: 'PRIVATE')]){
                 sh 'date'
                 }
            }
        }

        stage('Stop app') {
            steps {
             withCredentials([sshUserPrivateKey(credentialsId: 'SSH_CRED', keyFileVariable: 'PRIVATE')]){
                 sh 'ansible-playbook deploy_my_app/stop.yml -i deploy_my_app/hosts.yml -e "host=${SERVER}"'
                 }
            }
        }

        stage('Start app') {
            steps {
             withCredentials([sshUserPrivateKey(credentialsId: 'SSH_CRED', keyFileVariable: 'PRIVATE')]){
                 sh 'ansible-playbook deploy_my_app/start.yml -i deploy_my_app/hosts.yml -e "host=${SERVER}"'
                 }
            }
        }
    }
}
